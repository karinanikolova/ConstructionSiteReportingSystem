@model SiteQueryModel

@{
	ViewData["Title"] = Model.Name;

	var siteWorks = Model.Works;
}

<div class="mb-5">
	<h3 class="text-center">@ViewData["Title"]</h3>
</div>

<form method="get">
	<div class="row">
		<div class="form-group col-md-3 d-flex justify-content-between">
			<div class="form-group">
				<label asp-for="Stage"></label>
				<select asp-for="Stage" class="form-control">
					<option value="">All</option>
					@foreach (var stage in Model.Stages)
					{
						<option value="@stage">@stage</option>
					}
				</select>
			</div>
		</div>

		<div class="form-group col-md-3">
			<label asp-for="SearchDate"></label>
			<input asp-for="SearchDate" class="form-control" placeholder="Enter search date here...">
			<div id="SearchDate" class="form-text">
				Enter date in format: @DateTimeConverter.ConvertDateToString(DateTime.UtcNow)
			</div>
		</div>

		<div class="form-group col-md-3">
			<div class="form-group">
				<label asp-for="Sorting"></label>
				<select asp-for="Sorting" class="form-control">
					<option value="0">Newest</option>
					<option value="1">Oldest</option>
				</select>
			</div>
		</div>

		<div class="col-md-3">
			<div class="form-group mt-4 p-2">
				<input type="submit" value="Filter" class="btn btn-outline-primary" />
			</div>
		</div>
	</div>
</form>

@{
	var previousPage = Model.CurrentPage - 1;
	if (previousPage < 1)
	{
		previousPage = 1;
	}

	var maxPage = Math.Ceiling((double)Model.TotalWorksCount /
		SiteQueryModel.WorksPerPage);
}

<div class="row mb-5">
	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
		<a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
		   asp-area=""
		   asp-controller="ConstructionSite"
		   asp-action="Site"
		   asp-route-currentPage="@previousPage"
		   asp-route-stage="@Model.Stage"
		   asp-route-searchDate="@Model.SearchDate"
		   asp-route-sorting="@((int)Model.Sorting)"><<</a>
	</div>

	@{
		bool areThereWorks = false;

		if (Model.Works.Any())
		{
			areThereWorks = true;
		}

		var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
		!areThereWorks;
	}

	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
		<a class="btn btn-primary
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
		   asp-area=""
		   asp-controller="ConstructionSite"
		   asp-action="Site"
		   asp-route-currentPage="@(Model.CurrentPage + 1)"
		   asp-route-stage="@Model.Stage"
		   asp-route-searchDate="@Model.SearchDate"
		   asp-route-sorting="@((int)Model.Sorting)">>></a>
	</div>
</div>

<table class="table table-hover">
	<thead>
		<tr>
			<th scope="col">Carry out date</th>
			<th scope="col">Type</th>
			<th scope="col">Description</th>
			<th scope="col">Contractor</th>
			<th scope="col">Quantity</th>
			<th scope="col">Unit</th>
			<th scope="col">Cost per unit</th>
			<th scope="col">Total cost</th>
			@if (siteWorks.Any(w => w.Creator == User?.Identity?.Name || User.IsAdmin()))
			{
				<th scope="col"></th>
			}
		</tr>
	</thead>
	<tbody>
		@foreach (var work in siteWorks)
		{
			<partial name="_SitePartial" model="@work" />
		}
	</tbody>
</table>